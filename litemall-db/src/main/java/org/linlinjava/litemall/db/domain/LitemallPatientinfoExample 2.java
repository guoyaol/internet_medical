package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallPatientinfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public LitemallPatientinfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public LitemallPatientinfoExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public LitemallPatientinfoExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallPatientinfoExample example = new LitemallPatientinfoExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public LitemallPatientinfoExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public LitemallPatientinfoExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andAgeIsNull() {
            addCriterion("age is null");
            return (Criteria) this;
        }

        public Criteria andAgeIsNotNull() {
            addCriterion("age is not null");
            return (Criteria) this;
        }

        public Criteria andAgeEqualTo(Integer value) {
            addCriterion("age =", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAgeEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("age = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeNotEqualTo(Integer value) {
            addCriterion("age <>", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAgeNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("age <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThan(Integer value) {
            addCriterion("age >", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("age > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
            addCriterion("age >=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("age >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThan(Integer value) {
            addCriterion("age <", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("age < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThanOrEqualTo(Integer value) {
            addCriterion("age <=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("age <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeIn(List<Integer> values) {
            addCriterion("age in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotIn(List<Integer> values) {
            addCriterion("age not in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeBetween(Integer value1, Integer value2) {
            addCriterion("age between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotBetween(Integer value1, Integer value2) {
            addCriterion("age not between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andHeightIsNull() {
            addCriterion("height is null");
            return (Criteria) this;
        }

        public Criteria andHeightIsNotNull() {
            addCriterion("height is not null");
            return (Criteria) this;
        }

        public Criteria andHeightEqualTo(Integer value) {
            addCriterion("height =", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHeightEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("height = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightNotEqualTo(Integer value) {
            addCriterion("height <>", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHeightNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("height <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightGreaterThan(Integer value) {
            addCriterion("height >", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHeightGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("height > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightGreaterThanOrEqualTo(Integer value) {
            addCriterion("height >=", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHeightGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("height >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightLessThan(Integer value) {
            addCriterion("height <", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHeightLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("height < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightLessThanOrEqualTo(Integer value) {
            addCriterion("height <=", value, "height");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHeightLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("height <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightIn(List<Integer> values) {
            addCriterion("height in", values, "height");
            return (Criteria) this;
        }

        public Criteria andHeightNotIn(List<Integer> values) {
            addCriterion("height not in", values, "height");
            return (Criteria) this;
        }

        public Criteria andHeightBetween(Integer value1, Integer value2) {
            addCriterion("height between", value1, value2, "height");
            return (Criteria) this;
        }

        public Criteria andHeightNotBetween(Integer value1, Integer value2) {
            addCriterion("height not between", value1, value2, "height");
            return (Criteria) this;
        }

        public Criteria andWeightIsNull() {
            addCriterion("weight is null");
            return (Criteria) this;
        }

        public Criteria andWeightIsNotNull() {
            addCriterion("weight is not null");
            return (Criteria) this;
        }

        public Criteria andWeightEqualTo(Integer value) {
            addCriterion("weight =", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andWeightEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("weight = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightNotEqualTo(Integer value) {
            addCriterion("weight <>", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andWeightNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("weight <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThan(Integer value) {
            addCriterion("weight >", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andWeightGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("weight > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThanOrEqualTo(Integer value) {
            addCriterion("weight >=", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andWeightGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("weight >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightLessThan(Integer value) {
            addCriterion("weight <", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andWeightLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("weight < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightLessThanOrEqualTo(Integer value) {
            addCriterion("weight <=", value, "weight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andWeightLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("weight <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightIn(List<Integer> values) {
            addCriterion("weight in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotIn(List<Integer> values) {
            addCriterion("weight not in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightBetween(Integer value1, Integer value2) {
            addCriterion("weight between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotBetween(Integer value1, Integer value2) {
            addCriterion("weight not between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andBmiIsNull() {
            addCriterion("bmi is null");
            return (Criteria) this;
        }

        public Criteria andBmiIsNotNull() {
            addCriterion("bmi is not null");
            return (Criteria) this;
        }

        public Criteria andBmiEqualTo(Integer value) {
            addCriterion("bmi =", value, "bmi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andBmiEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("bmi = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBmiNotEqualTo(Integer value) {
            addCriterion("bmi <>", value, "bmi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andBmiNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("bmi <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBmiGreaterThan(Integer value) {
            addCriterion("bmi >", value, "bmi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andBmiGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("bmi > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBmiGreaterThanOrEqualTo(Integer value) {
            addCriterion("bmi >=", value, "bmi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andBmiGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("bmi >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBmiLessThan(Integer value) {
            addCriterion("bmi <", value, "bmi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andBmiLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("bmi < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBmiLessThanOrEqualTo(Integer value) {
            addCriterion("bmi <=", value, "bmi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andBmiLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("bmi <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBmiIn(List<Integer> values) {
            addCriterion("bmi in", values, "bmi");
            return (Criteria) this;
        }

        public Criteria andBmiNotIn(List<Integer> values) {
            addCriterion("bmi not in", values, "bmi");
            return (Criteria) this;
        }

        public Criteria andBmiBetween(Integer value1, Integer value2) {
            addCriterion("bmi between", value1, value2, "bmi");
            return (Criteria) this;
        }

        public Criteria andBmiNotBetween(Integer value1, Integer value2) {
            addCriterion("bmi not between", value1, value2, "bmi");
            return (Criteria) this;
        }

        public Criteria andSmokeIsNull() {
            addCriterion("smoke is null");
            return (Criteria) this;
        }

        public Criteria andSmokeIsNotNull() {
            addCriterion("smoke is not null");
            return (Criteria) this;
        }

        public Criteria andSmokeEqualTo(Boolean value) {
            addCriterion("smoke =", value, "smoke");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andSmokeEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("smoke = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSmokeNotEqualTo(Boolean value) {
            addCriterion("smoke <>", value, "smoke");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andSmokeNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("smoke <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSmokeGreaterThan(Boolean value) {
            addCriterion("smoke >", value, "smoke");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andSmokeGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("smoke > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSmokeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("smoke >=", value, "smoke");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andSmokeGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("smoke >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSmokeLessThan(Boolean value) {
            addCriterion("smoke <", value, "smoke");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andSmokeLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("smoke < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSmokeLessThanOrEqualTo(Boolean value) {
            addCriterion("smoke <=", value, "smoke");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andSmokeLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("smoke <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSmokeIn(List<Boolean> values) {
            addCriterion("smoke in", values, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeNotIn(List<Boolean> values) {
            addCriterion("smoke not in", values, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeBetween(Boolean value1, Boolean value2) {
            addCriterion("smoke between", value1, value2, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("smoke not between", value1, value2, "smoke");
            return (Criteria) this;
        }

        public Criteria andDrinkIsNull() {
            addCriterion("drink is null");
            return (Criteria) this;
        }

        public Criteria andDrinkIsNotNull() {
            addCriterion("drink is not null");
            return (Criteria) this;
        }

        public Criteria andDrinkEqualTo(Boolean value) {
            addCriterion("drink =", value, "drink");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDrinkEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("drink = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrinkNotEqualTo(Boolean value) {
            addCriterion("drink <>", value, "drink");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDrinkNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("drink <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrinkGreaterThan(Boolean value) {
            addCriterion("drink >", value, "drink");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDrinkGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("drink > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrinkGreaterThanOrEqualTo(Boolean value) {
            addCriterion("drink >=", value, "drink");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDrinkGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("drink >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrinkLessThan(Boolean value) {
            addCriterion("drink <", value, "drink");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDrinkLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("drink < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrinkLessThanOrEqualTo(Boolean value) {
            addCriterion("drink <=", value, "drink");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDrinkLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("drink <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrinkIn(List<Boolean> values) {
            addCriterion("drink in", values, "drink");
            return (Criteria) this;
        }

        public Criteria andDrinkNotIn(List<Boolean> values) {
            addCriterion("drink not in", values, "drink");
            return (Criteria) this;
        }

        public Criteria andDrinkBetween(Boolean value1, Boolean value2) {
            addCriterion("drink between", value1, value2, "drink");
            return (Criteria) this;
        }

        public Criteria andDrinkNotBetween(Boolean value1, Boolean value2) {
            addCriterion("drink not between", value1, value2, "drink");
            return (Criteria) this;
        }

        public Criteria andMarryIsNull() {
            addCriterion("marry is null");
            return (Criteria) this;
        }

        public Criteria andMarryIsNotNull() {
            addCriterion("marry is not null");
            return (Criteria) this;
        }

        public Criteria andMarryEqualTo(Boolean value) {
            addCriterion("marry =", value, "marry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andMarryEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("marry = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarryNotEqualTo(Boolean value) {
            addCriterion("marry <>", value, "marry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andMarryNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("marry <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarryGreaterThan(Boolean value) {
            addCriterion("marry >", value, "marry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andMarryGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("marry > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarryGreaterThanOrEqualTo(Boolean value) {
            addCriterion("marry >=", value, "marry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andMarryGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("marry >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarryLessThan(Boolean value) {
            addCriterion("marry <", value, "marry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andMarryLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("marry < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarryLessThanOrEqualTo(Boolean value) {
            addCriterion("marry <=", value, "marry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andMarryLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("marry <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarryIn(List<Boolean> values) {
            addCriterion("marry in", values, "marry");
            return (Criteria) this;
        }

        public Criteria andMarryNotIn(List<Boolean> values) {
            addCriterion("marry not in", values, "marry");
            return (Criteria) this;
        }

        public Criteria andMarryBetween(Boolean value1, Boolean value2) {
            addCriterion("marry between", value1, value2, "marry");
            return (Criteria) this;
        }

        public Criteria andMarryNotBetween(Boolean value1, Boolean value2) {
            addCriterion("marry not between", value1, value2, "marry");
            return (Criteria) this;
        }

        public Criteria andChildIsNull() {
            addCriterion("child is null");
            return (Criteria) this;
        }

        public Criteria andChildIsNotNull() {
            addCriterion("child is not null");
            return (Criteria) this;
        }

        public Criteria andChildEqualTo(Boolean value) {
            addCriterion("child =", value, "child");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChildEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("child = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildNotEqualTo(Boolean value) {
            addCriterion("child <>", value, "child");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChildNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("child <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildGreaterThan(Boolean value) {
            addCriterion("child >", value, "child");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChildGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("child > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildGreaterThanOrEqualTo(Boolean value) {
            addCriterion("child >=", value, "child");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChildGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("child >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildLessThan(Boolean value) {
            addCriterion("child <", value, "child");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChildLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("child < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildLessThanOrEqualTo(Boolean value) {
            addCriterion("child <=", value, "child");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChildLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("child <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildIn(List<Boolean> values) {
            addCriterion("child in", values, "child");
            return (Criteria) this;
        }

        public Criteria andChildNotIn(List<Boolean> values) {
            addCriterion("child not in", values, "child");
            return (Criteria) this;
        }

        public Criteria andChildBetween(Boolean value1, Boolean value2) {
            addCriterion("child between", value1, value2, "child");
            return (Criteria) this;
        }

        public Criteria andChildNotBetween(Boolean value1, Boolean value2) {
            addCriterion("child not between", value1, value2, "child");
            return (Criteria) this;
        }

        public Criteria andChronicIsNull() {
            addCriterion("chronic is null");
            return (Criteria) this;
        }

        public Criteria andChronicIsNotNull() {
            addCriterion("chronic is not null");
            return (Criteria) this;
        }

        public Criteria andChronicEqualTo(Boolean value) {
            addCriterion("chronic =", value, "chronic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChronicEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("chronic = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChronicNotEqualTo(Boolean value) {
            addCriterion("chronic <>", value, "chronic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChronicNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("chronic <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChronicGreaterThan(Boolean value) {
            addCriterion("chronic >", value, "chronic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChronicGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("chronic > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChronicGreaterThanOrEqualTo(Boolean value) {
            addCriterion("chronic >=", value, "chronic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChronicGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("chronic >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChronicLessThan(Boolean value) {
            addCriterion("chronic <", value, "chronic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChronicLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("chronic < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChronicLessThanOrEqualTo(Boolean value) {
            addCriterion("chronic <=", value, "chronic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andChronicLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("chronic <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChronicIn(List<Boolean> values) {
            addCriterion("chronic in", values, "chronic");
            return (Criteria) this;
        }

        public Criteria andChronicNotIn(List<Boolean> values) {
            addCriterion("chronic not in", values, "chronic");
            return (Criteria) this;
        }

        public Criteria andChronicBetween(Boolean value1, Boolean value2) {
            addCriterion("chronic between", value1, value2, "chronic");
            return (Criteria) this;
        }

        public Criteria andChronicNotBetween(Boolean value1, Boolean value2) {
            addCriterion("chronic not between", value1, value2, "chronic");
            return (Criteria) this;
        }

        public Criteria andAllergyIsNull() {
            addCriterion("allergy is null");
            return (Criteria) this;
        }

        public Criteria andAllergyIsNotNull() {
            addCriterion("allergy is not null");
            return (Criteria) this;
        }

        public Criteria andAllergyEqualTo(Boolean value) {
            addCriterion("allergy =", value, "allergy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAllergyEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("allergy = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllergyNotEqualTo(Boolean value) {
            addCriterion("allergy <>", value, "allergy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAllergyNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("allergy <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllergyGreaterThan(Boolean value) {
            addCriterion("allergy >", value, "allergy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAllergyGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("allergy > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllergyGreaterThanOrEqualTo(Boolean value) {
            addCriterion("allergy >=", value, "allergy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAllergyGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("allergy >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllergyLessThan(Boolean value) {
            addCriterion("allergy <", value, "allergy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAllergyLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("allergy < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllergyLessThanOrEqualTo(Boolean value) {
            addCriterion("allergy <=", value, "allergy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAllergyLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("allergy <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllergyIn(List<Boolean> values) {
            addCriterion("allergy in", values, "allergy");
            return (Criteria) this;
        }

        public Criteria andAllergyNotIn(List<Boolean> values) {
            addCriterion("allergy not in", values, "allergy");
            return (Criteria) this;
        }

        public Criteria andAllergyBetween(Boolean value1, Boolean value2) {
            addCriterion("allergy between", value1, value2, "allergy");
            return (Criteria) this;
        }

        public Criteria andAllergyNotBetween(Boolean value1, Boolean value2) {
            addCriterion("allergy not between", value1, value2, "allergy");
            return (Criteria) this;
        }

        public Criteria andDescIsNull() {
            addCriterion("`desc` is null");
            return (Criteria) this;
        }

        public Criteria andDescIsNotNull() {
            addCriterion("`desc` is not null");
            return (Criteria) this;
        }

        public Criteria andDescEqualTo(String value) {
            addCriterion("`desc` =", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDescEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`desc` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescNotEqualTo(String value) {
            addCriterion("`desc` <>", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDescNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`desc` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescGreaterThan(String value) {
            addCriterion("`desc` >", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDescGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`desc` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescGreaterThanOrEqualTo(String value) {
            addCriterion("`desc` >=", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDescGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`desc` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLessThan(String value) {
            addCriterion("`desc` <", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDescLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`desc` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLessThanOrEqualTo(String value) {
            addCriterion("`desc` <=", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDescLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("`desc` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLike(String value) {
            addCriterion("`desc` like", value, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotLike(String value) {
            addCriterion("`desc` not like", value, "desc");
            return (Criteria) this;
        }

        public Criteria andDescIn(List<String> values) {
            addCriterion("`desc` in", values, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotIn(List<String> values) {
            addCriterion("`desc` not in", values, "desc");
            return (Criteria) this;
        }

        public Criteria andDescBetween(String value1, String value2) {
            addCriterion("`desc` between", value1, value2, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotBetween(String value1, String value2) {
            addCriterion("`desc` not between", value1, value2, "desc");
            return (Criteria) this;
        }

        public Criteria andHistoryIsNull() {
            addCriterion("history is null");
            return (Criteria) this;
        }

        public Criteria andHistoryIsNotNull() {
            addCriterion("history is not null");
            return (Criteria) this;
        }

        public Criteria andHistoryEqualTo(String value) {
            addCriterion("history =", value, "history");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHistoryEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("history = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHistoryNotEqualTo(String value) {
            addCriterion("history <>", value, "history");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHistoryNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("history <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHistoryGreaterThan(String value) {
            addCriterion("history >", value, "history");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHistoryGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("history > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHistoryGreaterThanOrEqualTo(String value) {
            addCriterion("history >=", value, "history");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHistoryGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("history >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHistoryLessThan(String value) {
            addCriterion("history <", value, "history");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHistoryLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("history < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHistoryLessThanOrEqualTo(String value) {
            addCriterion("history <=", value, "history");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andHistoryLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("history <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHistoryLike(String value) {
            addCriterion("history like", value, "history");
            return (Criteria) this;
        }

        public Criteria andHistoryNotLike(String value) {
            addCriterion("history not like", value, "history");
            return (Criteria) this;
        }

        public Criteria andHistoryIn(List<String> values) {
            addCriterion("history in", values, "history");
            return (Criteria) this;
        }

        public Criteria andHistoryNotIn(List<String> values) {
            addCriterion("history not in", values, "history");
            return (Criteria) this;
        }

        public Criteria andHistoryBetween(String value1, String value2) {
            addCriterion("history between", value1, value2, "history");
            return (Criteria) this;
        }

        public Criteria andHistoryNotBetween(String value1, String value2) {
            addCriterion("history not between", value1, value2, "history");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallPatientinfo.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        private LitemallPatientinfoExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        protected Criteria(LitemallPatientinfoExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public LitemallPatientinfoExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallPatientinfo.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallPatientinfo.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_patientinfo
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_patientinfo
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_patientinfo
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallPatientinfoExample example);
    }
}